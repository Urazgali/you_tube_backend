package com.example.repository;import com.example.entity.CommentEntity;import org.springframework.data.domain.Page;import org.springframework.data.domain.Pageable;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import java.time.LocalDateTime;public interface CommentRepository extends JpaRepository<CommentEntity, String> {    Page<CommentEntity> findAllByProfileId(Integer id, Pageable pageable);    Page<CommentEntity> findAllByContent(String content, Pageable pageable);    Page<CommentEntity> findAllByCreatedDateBetween(LocalDateTime beginning, LocalDateTime ending, Pageable pageable);    Page<CommentEntity> findAllByLikeCount(Long count, Pageable pageable);    Page<CommentEntity> findAllByDislikeCount(Long count, Pageable pageable);    Page<CommentEntity> findAllByVideoId(String id, Pageable pageable);//    @Query(value = "SELECT c.id, c.visible, c.createdDate, c.profileId, c.videoId, c.content, c.replyId, c.likeCount, c.dislikeCount" +//            " FROM CommentEntity c" +//            " INNER JOIN c.videoEntity v" +//            " WHERE v.title LIKE CONCAT('%', :title, '%')",    //            nativeQuery = false)    @Query(value = "SELECT c" +        " FROM CommentEntity c" +        " INNER JOIN c.videoEntity as v" +        " WHERE v.title LIKE :title",        nativeQuery = false)    Page<CommentEntity> findAllByVideoTitle(@Param("title") String title, Pageable pageable);}