package com.example.repository;import com.example.entity.PlaylistVideoEntity;import com.example.entity.VideoEntity;import com.example.mapper.PlaylistVideoInfoMapper;import org.springframework.data.domain.Page;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import org.springframework.transaction.annotation.Transactional;import java.util.List;import java.util.Optional;public interface PlaylistVideoRepository extends JpaRepository<PlaylistVideoEntity, Integer> {    @Transactional    void deleteByPlaylistId(Integer id);    @Transactional    void deleteByVideoId(String id);    Optional<PlaylistVideoEntity> findByVideoId(String id);    Optional<PlaylistVideoEntity> findByPlaylistId(Integer id);    @Query(value = "select pv.playlist_id," +            "       v.id," +            "       pa.id," +            "       pa.url," +            "       v.title," +            "       a.duration," +            "       ch.id," +            "       ch.name," +            "       pv.created_date," +            "       pv.order_num" +            " from playlist_video pv" +            "         inner join video v on pv.video_id = v.id" +            "         inner join attach a on a.id = v.id" +            "         inner join preview_attach pa on v.preview_attach_id = pa.id" +            "         inner join channel ch on v.channel_id = ch.id" +            " where v.video_kind like 'PUBLISHED'", nativeQuery = true)    List<PlaylistVideoInfoMapper> getVideoListByPlaylistId(@Param("playlistId") Integer playlistId);}