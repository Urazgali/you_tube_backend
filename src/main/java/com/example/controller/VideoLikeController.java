package com.example.controller;import com.example.dto.ApiResponse;import com.example.dto.VideoDTO;import com.example.dto.VideoLikeDTO;import com.example.service.VideoLikeService;import io.swagger.v3.oas.annotations.Operation;import io.swagger.v3.oas.annotations.tags.Tag;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.web.bind.annotation.*;import javax.validation.Valid;@RestController@RequestMapping("")@Tag(name = "VIDEO LIKE CONTROLLER 👍🏻👎🏻", description = "this api used for video liking")public class VideoLikeController {    @Autowired    private VideoLikeService videoLikeService;    @Operation(summary = "create or remove like 👍🏻", description = "this api used for create or remove like")    @PostMapping("/close/like/{videoId}")    @PreAuthorize("hasAnyRole('USER', 'ADMIN')")    public ResponseEntity<ApiResponse> like(@PathVariable String videoId) {        ApiResponse response = videoLikeService.like(videoId);        return ResponseEntity                .status(response.getStatus()                        ? HttpStatus.CREATED                        : HttpStatus.BAD_REQUEST)                .body(response);    }    @Operation(summary = "create or remove dislike 👎🏻", description = "this api used for create or remove dislike")    @PostMapping("/close/dislike/{videoId}")    @PreAuthorize("hasAnyRole('USER', 'ADMIN')")    public ResponseEntity<ApiResponse> dislike(@PathVariable String videoId) {        ApiResponse response = videoLikeService.dislike(videoId);        return ResponseEntity                .status(response.getStatus()                        ? HttpStatus.CREATED                        : HttpStatus.BAD_REQUEST)                .body(response);    }}